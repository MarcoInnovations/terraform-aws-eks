[0m[1mdata.template_file.helm_rbac_config: Refreshing state...[0m
[0m[1mdata.template_file.aws_authenticator_env_variables: Refreshing state...[0m
[0m[1mdata.template_file.proxy_environment_variables: Refreshing state...[0m
[0m[1mdata.template_file.http_proxy_workergroup: Refreshing state...[0m
[0m[1mdata.template_file.cluster_autoscaling: Refreshing state...[0m
[0m[1mdata.aws_region.current: Refreshing state...[0m
[0m[1mdata.aws_caller_identity.current: Refreshing state...[0m
[0m[1mdata.aws_iam_policy_document.cluster_assume_role_policy: Refreshing state...[0m
[0m[1mdata.aws_ami.eks_worker: Refreshing state...[0m
[0m[1mdata.aws_iam_policy_document.workers_assume_role_policy: Refreshing state...[0m

An execution plan has been generated and is shown below.
Resource actions are indicated with the following symbols:
  [32m+[0m create
 [36m<=[0m read (data resources)
[0m
Terraform will perform the following actions:

[32m  [32m+[0m [32mmodule.eks.aws_security_group.all_worker_mgmt
[0m      id:                                                 <computed>
      arn:                                                <computed>
      description:                                        "Managed by Terraform"
      egress.#:                                           <computed>
      ingress.#:                                          <computed>
      name:                                               <computed>
      name_prefix:                                        "all_worker_management"
      owner_id:                                           <computed>
      revoke_rules_on_delete:                             "false"
      vpc_id:                                             "vpc-628b8b19"
[0m
[0m[32m  [32m+[0m [32mmodule.eks.null_resource.initialize_cluster_autoscaling
[0m      id:                                                 <computed>
[0m
[0m[32m  [32m+[0m [32mmodule.eks.null_resource.initialize_helm
[0m      id:                                                 <computed>
[0m
[0m[32m  [32m+[0m [32mmodule.eks.null_resource.install_metrics_server
[0m      id:                                                 <computed>
[0m
[0m[32m  [32m+[0m [32mmodule.eks.null_resource.master_config_services_proxy[0]
[0m      id:                                                 <computed>
[0m
[0m[32m  [32m+[0m [32mmodule.eks.null_resource.master_config_services_proxy[1]
[0m      id:                                                 <computed>
[0m
[0m[32m  [32m+[0m [32mmodule.eks.null_resource.master_config_services_proxy[2]
[0m      id:                                                 <computed>
[0m
[0m[32m  [32m+[0m [32mmodule.eks.null_resource.proxy_environment_variables
[0m      id:                                                 <computed>
[0m
[0m[32m  [32m+[0m [32mmodule.eks.null_resource.validate_dns
[0m      id:                                                 <computed>
[0m
[0m[36m [36m<=[0m [36mmodule.eks.module.eks.data.aws_iam_policy_document.worker_autoscaling
[0m      id:                                                 <computed>
      json:                                               <computed>
      statement.#:                                        "2"
      statement.0.actions.#:                              "5"
      statement.0.actions.1274732150:                     "autoscaling:DescribeAutoScalingGroups"
      statement.0.actions.1418764550:                     "ec2:DescribeLaunchTemplateVersions"
      statement.0.actions.2448883636:                     "autoscaling:DescribeAutoScalingInstances"
      statement.0.actions.2555065653:                     "autoscaling:DescribeLaunchConfigurations"
      statement.0.actions.3701464416:                     "autoscaling:DescribeTags"
      statement.0.effect:                                 "Allow"
      statement.0.resources.#:                            "1"
      statement.0.resources.2679715827:                   "*"
      statement.0.sid:                                    "eksWorkerAutoscalingAll"
      statement.1.actions.#:                              "3"
      statement.1.actions.1536675971:                     "autoscaling:UpdateAutoScalingGroup"
      statement.1.actions.3469696720:                     "autoscaling:TerminateInstanceInAutoScalingGroup"
      statement.1.actions.557626329:                      "autoscaling:SetDesiredCapacity"
      statement.1.condition.#:                            "2"
      statement.1.condition.2053419364.test:              "StringEquals"
      statement.1.condition.2053419364.values.#:          "1"
      statement.1.condition.2053419364.values.653127311:  "owned"
      statement.1.condition.2053419364.variable:          "autoscaling:ResourceTag/kubernetes.io/cluster/mrt92-02"
      statement.1.condition.3636405986.test:              "StringEquals"
      statement.1.condition.3636405986.values.#:          "1"
      statement.1.condition.3636405986.values.4043113848: "true"
      statement.1.condition.3636405986.variable:          "autoscaling:ResourceTag/k8s.io/cluster-autoscaler/enabled"
      statement.1.effect:                                 "Allow"
      statement.1.resources.#:                            "1"
      statement.1.resources.2679715827:                   "*"
      statement.1.sid:                                    "eksWorkerAutoscalingOwn"
      version:                                            "2012-10-17"
[0m
[0m[36m [36m<=[0m [36mmodule.eks.module.eks.data.template_file.config_map_aws_auth
[0m      id:                                                 <computed>
      rendered:                                           <computed>
      template:                                           "apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: aws-auth\n  namespace: kube-system\ndata:\n  mapRoles: |\n${worker_role_arn}\n${map_roles}\n  mapUsers: |\n${map_users}\n  mapAccounts: |\n${map_accounts}\n"
      vars.%:                                             <computed>
[0m
[0m[36m [36m<=[0m [36mmodule.eks.module.eks.data.template_file.kubeconfig
[0m      id:                                                 <computed>
      rendered:                                           <computed>
      template:                                           "apiVersion: v1\npreferences: {}\nkind: Config\n\nclusters:\n- cluster:\n    server: ${endpoint}\n    certificate-authority-data: ${cluster_auth_base64}\n  name: ${kubeconfig_name}\n\ncontexts:\n- context:\n    cluster: ${kubeconfig_name}\n    user: ${kubeconfig_name}\n  name: ${kubeconfig_name}\n\ncurrent-context: ${kubeconfig_name}\n\nusers:\n- name: ${kubeconfig_name}\n  user:\n    exec:\n      apiVersion: client.authentication.k8s.io/v1alpha1\n      command: ${aws_authenticator_command}\n      args:\n${aws_authenticator_command_args}\n${aws_authenticator_additional_args}\n${aws_authenticator_env_variables}\n"
      vars.%:                                             <computed>
[0m
[0m[36m [36m<=[0m [36mmodule.eks.module.eks.data.template_file.userdata
[0m      id:                                                 <computed>
      rendered:                                           <computed>
      template:                                           "#!/bin/bash -xe\n\n# Allow user supplied pre userdata code\n${pre_userdata}\n\n# Bootstrap and join the cluster\n/etc/eks/bootstrap.sh --b64-cluster-ca '${cluster_auth_base64}' --apiserver-endpoint '${endpoint}' ${bootstrap_extra_args} --kubelet-extra-args '${kubelet_extra_args}' '${cluster_name}'\n\n# Allow user supplied userdata code\n${additional_userdata}\n"
      vars.%:                                             <computed>
[0m
[0m[36m [36m<=[0m [36mmodule.eks.module.eks.data.template_file.worker_role_arns
[0m      id:                                                 <computed>
      rendered:                                           <computed>
      template:                                           "    - rolearn: ${worker_role_arn}\n      username: system:node:{{EC2PrivateDNSName}}\n      groups:\n        - system:bootstrappers\n        - system:nodes\n"
      vars.%:                                             <computed>
[0m
[0m[32m  [32m+[0m [32mmodule.eks.module.eks.aws_autoscaling_group.workers
[0m      id:                                                 <computed>
      arn:                                                <computed>
      availability_zones.#:                               <computed>
      default_cooldown:                                   <computed>
      desired_capacity:                                   "0"
      enabled_metrics.#:                                  <computed>
      force_delete:                                       "false"
      health_check_grace_period:                          "300"
      health_check_type:                                  <computed>
      launch_configuration:                               "${element(aws_launch_configuration.workers.*.id, count.index)}"
      load_balancers.#:                                   <computed>
      max_size:                                           "0"
      metrics_granularity:                                "1Minute"
      min_size:                                           "0"
      name:                                               <computed>
      name_prefix:                                        "mrt92-02-worker_group_a"
      placement_group:                                    "${lookup(var.worker_groups[count.index], \"placement_group\", local.workers_group_defaults[\"placement_group\"])}"
      protect_from_scale_in:                              "false"
      service_linked_role_arn:                            <computed>
      suspended_processes.#:                              <computed>
      tags.#:                                             <computed>
      target_group_arns.#:                                <computed>
      vpc_zone_identifier.#:                              <computed>
      wait_for_capacity_timeout:                          "10m"
[0m
[0m[32m  [32m+[0m [32mmodule.eks.module.eks.aws_eks_cluster.this
[0m      id:                                                 <computed>
      arn:                                                <computed>
      certificate_authority.#:                            <computed>
      created_at:                                         <computed>
      endpoint:                                           <computed>
      name:                                               "mrt92-02"
      platform_version:                                   <computed>
      role_arn:                                           "${aws_iam_role.cluster.arn}"
      version:                                            "1.11"
      vpc_config.#:                                       "1"
      vpc_config.0.endpoint_private_access:               "false"
      vpc_config.0.endpoint_public_access:                "true"
      vpc_config.0.security_group_ids.#:                  <computed>
      vpc_config.0.subnet_ids.#:                          "3"
      vpc_config.0.subnet_ids.2851276800:                 "subnet-c819d3af"
      vpc_config.0.subnet_ids.719212537:                  "subnet-50804c0c"
      vpc_config.0.subnet_ids.994008125:                  "subnet-2fad3d65"
      vpc_config.0.vpc_id:                                <computed>
[0m
[0m[32m  [32m+[0m [32mmodule.eks.module.eks.aws_iam_instance_profile.workers
[0m      id:                                                 <computed>
      arn:                                                <computed>
      create_date:                                        <computed>
      name:                                               <computed>
      name_prefix:                                        "mrt92-02"
      path:                                               "/"
      role:                                               "${lookup(var.worker_groups[count.index], \"iam_role_id\",  lookup(local.workers_group_defaults, \"iam_role_id\"))}"
      roles.#:                                            <computed>
      unique_id:                                          <computed>
[0m
[0m[32m  [32m+[0m [32mmodule.eks.module.eks.aws_iam_policy.worker_autoscaling
[0m      id:                                                 <computed>
      arn:                                                <computed>
      description:                                        "EKS worker node autoscaling policy for cluster mrt92-02"
      name:                                               <computed>
      name_prefix:                                        "eks-worker-autoscaling-mrt92-02"
      path:                                               "/"
      policy:                                             "${data.aws_iam_policy_document.worker_autoscaling.json}"
[0m
[0m[32m  [32m+[0m [32mmodule.eks.module.eks.aws_iam_role.cluster
[0m      id:                                                 <computed>
      arn:                                                <computed>
      assume_role_policy:                                 "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSClusterAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"eks.amazonaws.com\"\n      }\n    }\n  ]\n}"
      create_date:                                        <computed>
      force_detach_policies:                              "true"
      max_session_duration:                               "3600"
      name:                                               <computed>
      name_prefix:                                        "mrt92-02"
      path:                                               "/"
      unique_id:                                          <computed>
[0m
[0m[32m  [32m+[0m [32mmodule.eks.module.eks.aws_iam_role.workers
[0m      id:                                                 <computed>
      arn:                                                <computed>
      assume_role_policy:                                 "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSWorkerAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      }\n    }\n  ]\n}"
      create_date:                                        <computed>
      force_detach_policies:                              "true"
      max_session_duration:                               "3600"
      name:                                               <computed>
      name_prefix:                                        "mrt92-02"
      path:                                               "/"
      unique_id:                                          <computed>
[0m
[0m[32m  [32m+[0m [32mmodule.eks.module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy
[0m      id:                                                 <computed>
      policy_arn:                                         "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy"
      role:                                               "${aws_iam_role.cluster.name}"
[0m
[0m[32m  [32m+[0m [32mmodule.eks.module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy
[0m      id:                                                 <computed>
      policy_arn:                                         "arn:aws:iam::aws:policy/AmazonEKSServicePolicy"
      role:                                               "${aws_iam_role.cluster.name}"
[0m
[0m[32m  [32m+[0m [32mmodule.eks.module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly
[0m      id:                                                 <computed>
      policy_arn:                                         "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
      role:                                               "${aws_iam_role.workers.name}"
[0m
[0m[32m  [32m+[0m [32mmodule.eks.module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy
[0m      id:                                                 <computed>
      policy_arn:                                         "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"
      role:                                               "${aws_iam_role.workers.name}"
[0m
[0m[32m  [32m+[0m [32mmodule.eks.module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy
[0m      id:                                                 <computed>
      policy_arn:                                         "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
      role:                                               "${aws_iam_role.workers.name}"
[0m
[0m[32m  [32m+[0m [32mmodule.eks.module.eks.aws_iam_role_policy_attachment.workers_autoscaling
[0m      id:                                                 <computed>
      policy_arn:                                         "${aws_iam_policy.worker_autoscaling.arn}"
      role:                                               "${aws_iam_role.workers.name}"
[0m
[0m[32m  [32m+[0m [32mmodule.eks.module.eks.aws_launch_configuration.workers
[0m      id:                                                 <computed>
      associate_public_ip_address:                        "false"
      ebs_block_device.#:                                 <computed>
      ebs_optimized:                                      "false"
      enable_monitoring:                                  "false"
      iam_instance_profile:                               "${element(aws_iam_instance_profile.workers.*.id, count.index)}"
      image_id:                                           "${lookup(var.worker_groups[count.index], \"ami_id\", local.workers_group_defaults[\"ami_id\"])}"
      instance_type:                                      "${lookup(var.worker_groups[count.index], \"instance_type\", local.workers_group_defaults[\"instance_type\"])}"
      key_name:                                           "${lookup(var.worker_groups[count.index], \"key_name\", local.workers_group_defaults[\"key_name\"])}"
      name:                                               <computed>
      name_prefix:                                        "mrt92-02-worker_group_a"
      placement_tenancy:                                  "${lookup(var.worker_groups[count.index], \"placement_tenancy\", local.workers_group_defaults[\"placement_tenancy\"])}"
      root_block_device.#:                                "1"
      root_block_device.0.delete_on_termination:          "true"
      root_block_device.0.iops:                           "0"
      root_block_device.0.volume_size:                    "0"
      root_block_device.0.volume_type:                    "${lookup(var.worker_groups[count.index], \"root_volume_type\", local.workers_group_defaults[\"root_volume_type\"])}"
      security_groups.#:                                  <computed>
      spot_price:                                         "${lookup(var.worker_groups[count.index], \"spot_price\", local.workers_group_defaults[\"spot_price\"])}"
      user_data_base64:                                   "${base64encode(element(data.template_file.userdata.*.rendered, count.index))}"
[0m
[0m[32m  [32m+[0m [32mmodule.eks.module.eks.aws_security_group.cluster
[0m      id:                                                 <computed>
      arn:                                                <computed>
      description:                                        "EKS cluster security group."
      egress.#:                                           <computed>
      ingress.#:                                          <computed>
      name:                                               <computed>
      name_prefix:                                        "mrt92-02"
      owner_id:                                           <computed>
      revoke_rules_on_delete:                             "false"
      tags.%:                                             "3"
      tags.Environment:                                   "dev"
      tags.Name:                                          "mrt92-02-eks_cluster_sg"
      tags.ProductDomain:                                 "mrt92-02"
      vpc_id:                                             "vpc-628b8b19"
[0m
[0m[32m  [32m+[0m [32mmodule.eks.module.eks.aws_security_group.workers
[0m      id:                                                 <computed>
      arn:                                                <computed>
      description:                                        "Security group for all nodes in the cluster."
      egress.#:                                           <computed>
      ingress.#:                                          <computed>
      name:                                               <computed>
      name_prefix:                                        "mrt92-02"
      owner_id:                                           <computed>
      revoke_rules_on_delete:                             "false"
      tags.%:                                             "4"
      tags.Environment:                                   "dev"
      tags.Name:                                          "mrt92-02-eks_worker_sg"
      tags.ProductDomain:                                 "mrt92-02"
      tags.kubernetes.io/cluster/mrt92-02:                "owned"
      vpc_id:                                             "vpc-628b8b19"
[0m
[0m[32m  [32m+[0m [32mmodule.eks.module.eks.aws_security_group_rule.cluster_egress_internet
[0m      id:                                                 <computed>
      cidr_blocks.#:                                      "1"
      cidr_blocks.0:                                      "0.0.0.0/0"
      description:                                        "Allow cluster egress access to the Internet."
      from_port:                                          "0"
      protocol:                                           "-1"
      security_group_id:                                  "${aws_security_group.cluster.id}"
      self:                                               "false"
      source_security_group_id:                           <computed>
      to_port:                                            "0"
      type:                                               "egress"
[0m
[0m[32m  [32m+[0m [32mmodule.eks.module.eks.aws_security_group_rule.cluster_https_worker_ingress
[0m      id:                                                 <computed>
      description:                                        "Allow pods to communicate with the EKS cluster API."
      from_port:                                          "443"
      protocol:                                           "tcp"
      security_group_id:                                  "${aws_security_group.cluster.id}"
      self:                                               "false"
      source_security_group_id:                           "${local.worker_security_group_id}"
      to_port:                                            "443"
      type:                                               "ingress"
[0m
[0m[32m  [32m+[0m [32mmodule.eks.module.eks.aws_security_group_rule.workers_egress_internet
[0m      id:                                                 <computed>
      cidr_blocks.#:                                      "1"
      cidr_blocks.0:                                      "0.0.0.0/0"
      description:                                        "Allow nodes all egress to the Internet."
      from_port:                                          "0"
      protocol:                                           "-1"
      security_group_id:                                  "${aws_security_group.workers.id}"
      self:                                               "false"
      source_security_group_id:                           <computed>
      to_port:                                            "0"
      type:                                               "egress"
[0m
[0m[32m  [32m+[0m [32mmodule.eks.module.eks.aws_security_group_rule.workers_ingress_cluster
[0m      id:                                                 <computed>
      description:                                        "Allow workers pods to receive communication from the cluster control plane."
      from_port:                                          "1025"
      protocol:                                           "tcp"
      security_group_id:                                  "${aws_security_group.workers.id}"
      self:                                               "false"
      source_security_group_id:                           "${local.cluster_security_group_id}"
      to_port:                                            "65535"
      type:                                               "ingress"
[0m
[0m[32m  [32m+[0m [32mmodule.eks.module.eks.aws_security_group_rule.workers_ingress_cluster_https
[0m      id:                                                 <computed>
      description:                                        "Allow pods running extension API servers on port 443 to receive communication from cluster control plane."
      from_port:                                          "443"
      protocol:                                           "tcp"
      security_group_id:                                  "${aws_security_group.workers.id}"
      self:                                               "false"
      source_security_group_id:                           "${local.cluster_security_group_id}"
      to_port:                                            "443"
      type:                                               "ingress"
[0m
[0m[32m  [32m+[0m [32mmodule.eks.module.eks.aws_security_group_rule.workers_ingress_self
[0m      id:                                                 <computed>
      description:                                        "Allow node to communicate with each other."
      from_port:                                          "0"
      protocol:                                           "-1"
      security_group_id:                                  "${aws_security_group.workers.id}"
      self:                                               "false"
      source_security_group_id:                           "${aws_security_group.workers.id}"
      to_port:                                            "65535"
      type:                                               "ingress"
[0m
[0m[32m  [32m+[0m [32mmodule.eks.module.eks.local_file.config_map_aws_auth
[0m      id:                                                 <computed>
      content:                                            "${data.template_file.config_map_aws_auth.rendered}"
      filename:                                           "./output/config-map-aws-auth_mrt92-02.yaml"
[0m
[0m[32m  [32m+[0m [32mmodule.eks.module.eks.local_file.kubeconfig
[0m      id:                                                 <computed>
      content:                                            "${data.template_file.kubeconfig.rendered}"
      filename:                                           "./output/kubeconfig_mrt92-02"
[0m
[0m[32m  [32m+[0m [32mmodule.eks.module.eks.null_resource.tags_as_list_of_maps[0]
[0m      id:                                                 <computed>
      triggers.%:                                         "3"
      triggers.key:                                       "Environment"
      triggers.propagate_at_launch:                       "true"
      triggers.value:                                     "dev"
[0m
[0m[32m  [32m+[0m [32mmodule.eks.module.eks.null_resource.tags_as_list_of_maps[1]
[0m      id:                                                 <computed>
      triggers.%:                                         "3"
      triggers.key:                                       "ProductDomain"
      triggers.propagate_at_launch:                       "true"
      triggers.value:                                     "mrt92-02"
[0m
[0m[32m  [32m+[0m [32mmodule.eks.module.eks.null_resource.update_config_map_aws_auth
[0m      id:                                                 <computed>
      triggers.%:                                         <computed>
[0m
[0m
[0m[1mPlan:[0m 35 to add, 0 to change, 0 to destroy.[0m

[0m[1mDo you want to perform these actions?[0m
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  [1mEnter a value:[0m [0m
Interrupt received.
Please wait for Terraform to exit or data loss may occur.
Gracefully shutting down...
